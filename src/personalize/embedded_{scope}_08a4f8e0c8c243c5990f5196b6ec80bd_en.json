{
  "clientKey": "3509a0a2b7cc0542af1e697ea16dafe9",
  "href": "https://api-us.boxever.com/v3/flowDefinitions/68928291-276c-4469-b843-7b252626810c",
  "ref": "68928291-276c-4469-b843-7b252626810c",
  "name": "embedded_{scope}_08a4f8e0c8c243c5990f5196b6ec80bd_en",
  "modifiedByRef": "UsQ4dFnLMklHuDXU8acKstHeXEC65tgU@clients",
  "modifiedAt": "2025-07-14T23:35:29.439Z",
  "revision": 2,
  "archived": false,
  "friendlyId": "embedded_{scope}_08a4f8e0c8c243c5990f5196b6ec80bd_en",
  "type": "INTERACTIVE_API_FLOW",
  "subtype": "EXPERIENCE",
  "channels": [
    "WEB"
  ],
  "triggers": [],
  "dashboardLinks": [],
  "tags": [],
  "businessProcess": "interactive_v1",
  "siteId": "4905319f-5b19-4ec4-9860-7bfcf5d4a2b5",
  "traffic": {
    "type": "audienceTraffic",
    "weightingAlgorithm": "USER_DEFINED",
    "modifiedAt": "2025-07-14T23:35:29.679Z",
    "splits": [
      {
        "template": "{\"variantId\": \"87ed8103a24846e4a8a233adb435330a\"}",
        "variantName": "TimedTest",
        "audienceName": "TimedTest",
        "conditionGroups": [
          {
            "conditions": [
              {
                "templateId": "organization_date_and_time",
                "params": {
                  "is": "is",
                  "before or after": "after",
                  "date and time": "2025-02-13T11:30"
                }
              }
            ]
          }
        ]
      },
      {
        "template": "{\"variantId\": \"c723eda99931493bb84a83e704ee4fbf\"}",
        "variantName": "UTM Test",
        "audienceName": "UTM Test",
        "conditionGroups": [
          {
            "conditions": [
              {
                "templateId": "utm_value",
                "params": {
                  "type": "campaign",
                  "compares to": "is equal to",
                  "UTM value": "hidden"
                }
              }
            ]
          }
        ]
      }
    ]
  },
  "variants": [],
  "transpiledVariants": [
    {
      "ref": "d979e32b-37dc-4e95-93d3-7c9d37b06edb",
      "name": "TimedTest",
      "tasks": [
        {
          "implementation": "templateRenderTask",
          "input": {
            "inputType": "templateRenderTaskInput",
            "type": "application/json",
            "template": "{\"variantId\": \"87ed8103a24846e4a8a233adb435330a\"}"
          }
        },
        {
          "implementation": "conditionsTask",
          "input": {
            "inputType": "conditionsTaskInput",
            "rules": [
              {
                "id": "scriptCondition",
                "name": "Combined condition groups",
                "description": "Combined templates within condition group for targeted experience",
                "ruleData": {
                  "expression": "(function () {\n    load(\"classpath:moment.js\");\n    load(\"classpath:moment-timezone.js\");\n    var returnValue = false;\n    var comparison = false;\n    var comparator = \"is\";\n    var operatorValue = \"after\";\n    var datetime = \"2025-02-13T11:30\";\n    var tenantTimezone = \"\";\n\n    if (tenant && tenant.configurations && tenant.configurations.timeZone) {\n        tenantTimezone = tenant.configurations.timeZone;\n    }\n    var inputDateTime = moment.tz(datetime, tenantTimezone);\n    var tenantDateTime = moment.tz(tenantTimezone);\n    \n    if (operatorValue === 'before') {\n        comparison = tenantDateTime.isBefore(inputDateTime);\n    } else if (operatorValue === 'after') {\n        comparison = tenantDateTime.isAfter(inputDateTime);\n    }\n        \n    if (comparator === \"is\") {\n        returnValue = comparison;\n    } else {\n        returnValue = !comparison;\n    }\n    return returnValue;\n})();"
                }
              }
            ]
          }
        }
      ]
    }
  ],
  "status": "PRODUCTION",
  "schedule": {
    "type": "simpleSchedule",
    "startDate": "2025-02-12T00:30:17.245Z"
  },
  "revisions": {
    "href": "https://api-us.boxever.com/v3/flowDefinitions/68928291-276c-4469-b843-7b252626810c/revisions"
  },
  "sampleSizeConfig": {
    "baseValue": 0.15,
    "minimumDetectableDifference": 0.02,
    "confidenceLevel": 0.95
  },
  "notificationEnabled": false
}
